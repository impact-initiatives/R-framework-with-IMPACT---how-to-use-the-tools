---
title: "01 - Revoir une analyse"
date: last-modified

---
# Analyse - Revoir une analyse
```{r}
#| warning: false
#| output: false

library(analysistools)
library(dplyr)

my_data <- analysistools_MSNA_template_data
my_results <- analysistools::analysistools_MSNA_template_no_ratio_results_table
```

## `create_loa_from_results`

Si la loa utilisée a été partagée, elle peut être réutilisée. Dans le cas contraire, la fonction `create_loa_from_results` génère, à partir de la table des résultats et de la clé d'analyse, une loa qui peut être utilisé pour créer l'analyse pour la revue. 

```{r}
my_loa_for_review <- my_results$results_table %>% 
  create_loa_from_results()

my_loa_for_review
```

::: {.callout-note .column-margin}
create_loa_from_results ne devinera pas les arguments pour `numerator_NA_to_0 ` et `filter_denominator_0 `, ils seront mis à VRAI par défaut.

Le niveau de confiance sera également fixé à .95 par défaut.
:::

## `review_analysis`

::: {.callout-tip appearance="minimal"}
### Revoir (review\_\*)

![](../config/images/verb - review.png)
Les fonctions **review\_**\* examineront un objet en le comparant à des normes ou à un autre objet et signaleront les différences, par exemple pour le nettoyage en comparant le jeu de données brut, le jeu de données nettoyé et le journal de nettoyage ; ou pour l’analyse en la comparant avec une autre analyse.

:::

`review_analysis` compare deux résultats et présente les différences. Il ne vérifiera pas la façon dont l'analyse a été créée ni les incohérences (strates, poids, etc). Cela signifie que pour revoir  une analyse, il est nécessaire d'en créer une et de les comparer. 

```{r}
#| output: false
my_design_for_review <- srvyr::as_survey_design(my_data)
analysis_for_review <- create_analysis(my_design_for_review, my_loa_for_review, sm_separator = "/")

binded_table <- my_results$results_table %>% 
  left_join(analysis_for_review$results_table, by = "analysis_key")
```
Le tableau avec les deux colonnes de résultats peut être utilisé pour comparer les deux résultats. 

```{r}
my_review <- review_analysis(binded_table)

typeof(my_review)
names(my_review)
```

`review_analysis` renvoie le tableau des résultats et un tableau de revue. Le tableau de revue. indiquera s'il y a une différence.

```{r}
my_review$review_table %>%
  head()
```

Les fonctions `group_by` et `tally` permettent de le résumer.

```{r}
my_review$review_table %>%
  group_by(stat, review_check, review_comment) %>%
  tally()
```

::: {.callout-note .column-margin}
Les *clés d'analyse* sont l'équivalent d'un identifiant unique. Toutes les clés d'analyse doivent être uniques.
:::

La partie suivante mélange des résultats pour montrer comment les différences apparaissent.

```{r}
jittered_results_table <- binded_table
set.seed(123)
jittered_results_table[sample(1:nrow(jittered_results_table), 5), "stat.x"] <- sample(unique(jittered_results_table$stat.x), 5, T)
set.seed(124)
jittered_results_table[sample(1:nrow(jittered_results_table), 5), "stat.y"] <- sample(unique(jittered_results_table$stat.y), 5, T)
set.seed(125)
jittered_results_table[sample(1:nrow(jittered_results_table), 5), "stat.x"] <- NA
set.seed(1236)
jittered_results_table[sample(1:nrow(jittered_results_table), 5), "stat.y"] <- NA

```

```{r}
my_jittered_review <- review_analysis(jittered_results_table, 
                                      stat_columns_to_review = "stat.x",
                                      stat_columns_to_compare_with = "stat.y")
my_jittered_review$review_table %>%
  group_by(stat, review_check, review_comment) %>%
  tally()
```

Le tableau des résultats comporte de nouvelles colonnes, en particulier review_check_* et review_comment_*. Elles peuvent aider à filtrer les différences et à explorer.

```{r}
my_jittered_review$results_table %>%
  filter(!review_check_stat.x) %>% 
  head(10)
```
