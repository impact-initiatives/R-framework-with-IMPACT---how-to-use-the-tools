---
title: "02 - Revoir les indicateurs"
date: last-modified

---
# Composition - Revoir des indicateurs

La révision des indicateurs comparera deux indicateurs ensemble et présentera les différences. Elle ne vérifiera pas comment l'indicateur a été créé ni ne cherchera d'incohérences. Cela signifie que pour réviser un indicateur, il est nécessaire d'en créer un et de les comparer. Les fonctions `review_one_variable` et `review_variables` se concentreront sur ce dernier point.

```{r}
#| warning: false
library(impactR4PHU)
library(dplyr)

my_data <- impactR4PHU::impactR4PHU_data_template |>  
  filter(respondent_consent != "no") 
my_data_with_indicators <- my_data %>%
  add_fcs(
  cutoffs = "normal"
) %>%
  add_hhs(
  )
```

## review_variables

Tout d'abord, un nouveau dataset est créé pour la revue.
```{r}
review_df <- my_data %>%
  add_fcs(
  cutoffs = "normal",
  ) %>%
  select(uuid, fsl_fcs_score, fsl_fcs_cat)
```

Ensuite, le dataset à revoir et le nouveau dataset sont joins ensemble.

```{r}
binded_df <- my_data_with_indicators %>%
  full_join(review_df, by = "uuid")
```

::: {.callout-note .column-margin}
Je conseillerais d'utiliser un `full_join` plutôt qu'un `left/right_join`. De cette façon, si une valeur manque dans un calcul, elle sera repérée.
:::

::: {.callout-note .column-margin}
Avec `join_*`, si les noms sont identiques, .x et .y seront ajoutés aux noms.
:::

::: {.callout-tip appearance="minimal"}
### review\_\*

![](../config/images/verb - review.png)

Les fonctions **review_**\* vont réviser un objet en le comparant à des normes ou à un autre objet et signaler les différences, par exemple, réviser le nettoyage en comparant le jeu de données brut, le jeu de données nettoyé et le journal de nettoyage, ou comparer une analyse à une autre.
:::



```{r}
library(addindicators)
```

```{r}
review_one_var <- review_variables(binded_df,
  columns_to_review = "fsl_fcs_cat.x",
  columns_to_compare_with = "fsl_fcs_cat.y")


review_one_var %>% 
  names()
```
C'est une liste avec le jeu de données et une table de révision.


```{r}
review_one_var$review_table %>% 
  head()
```

La table de révision peut être résumée pour avoir un aperçu plus rapide.

```{r}
review_one_var$review_table %>%
  group_by(review_check, review_comment) %>%
  tally()
```

Pour voir comment les différences sont affichées, du bruit est introduit dans le jeu de données.

```{r}
jittered_df <- binded_df
set.seed(123)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.x"] <- sample(unique(jittered_df$fsl_fcs_cat.y), 5, T)
set.seed(124)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.y"] <- sample(unique(jittered_df$fsl_fcs_cat.y), 5, T)
set.seed(125)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.x"] <- NA
set.seed(1236)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.y"] <- NA
set.seed(1237)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_score.x"] <- sample(unique(jittered_df$fsl_fcs_score.x), 5, T)
```

```{r}
review_one_variable_jittered <- review_variables(jittered_df,
  columns_to_review = "fsl_fcs_cat.x",
  columns_to_compare_with = "fsl_fcs_cat.y")

review_one_variable_jittered$review_table %>%
  group_by(review_check, review_comment) %>%
  tally()
```

Le jeu de données a de nouvelles colonnes pour aider au filtrage en vue d'investigations ultérieures.

```{r}
review_one_variable_jittered$dataset[, tail(names(review_one_variable_jittered$dataset), 5)] %>%
  head()
```
```{r}
review_one_variable_jittered$dataset %>%
  filter(!review_check_fsl_fcs_cat.x) %>%
  select(uuid, fsl_fcs_cat.x, fsl_fcs_cat.y, review_check_fsl_fcs_cat.x, review_comment_fsl_fcs_cat.x)
```

Si plusieurs variables doivent être revues, des vecteurs par paires peuvent être utilisés.

```{r}
my_review <- review_variables(jittered_df,
  columns_to_review = c("fsl_fcs_cat.x", "fsl_fcs_score.x"),
  columns_to_compare_with = c("fsl_fcs_cat.y", "fsl_fcs_score.y")
)
```

```{r}
my_review$review_table %>%
  group_by(variable, review_check, review_comment) %>%
  tally()
```
```{r}
my_review$dataset %>%
  filter(!review_check_fsl_fcs_cat.x) %>%
  select(uuid, fsl_fcs_cat.x, fsl_fcs_cat.y, review_comment_fsl_fcs_cat.x)
```
```{r}
my_review$dataset %>%
  filter(!review_check_fsl_fcs_score.x) %>%
  select(uuid, fsl_fcs_score.x, fsl_fcs_score.y, review_comment_fsl_fcs_score.x)
```
